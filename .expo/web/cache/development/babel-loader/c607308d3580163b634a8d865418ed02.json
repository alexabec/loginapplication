{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\Desktop\\\\app projects\\\\loginapp\\\\screens\\\\LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.loginFunction = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.state.username == '1' && _this.state.password == '1') {\n                _this.props.navigation.navigate('Home', {\n                  username: _this.state.username,\n                  password: _this.state.password\n                });\n              } else {\n                alert('Wrong username and password. Use 1 and 1.');\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      username: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(input, field) {\n      if (field == 'username') {\n        this.setState({\n          username: input\n        });\n      } else if (field == 'password') {\n        this.setState({\n          password: input\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          padding: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 100,\n          fontSize: 50,\n          fontWeight: 'bold',\n          alignSelf: 'center',\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, \"WELCOME\")))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginTop: 10,\n          fontSize: 22,\n          color: 'gray',\n          alignSelf: 'center',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, \"PLEASE ENTER 1 FOR USERNAME AND 1 FOR PASSWORD TO ENTER\")), React.createElement(View, {\n        style: {\n          marginTop: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          color: 'white',\n          alignSelf: 'center',\n          marginBottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, \"username\"), React.createElement(View, {\n        style: {\n          height: 40,\n          backgroundColor: '#2c2c2e',\n          opacity: 0.8,\n          marginBottom: 10,\n          alignSelf: 'center',\n          width: '60%',\n          borderWidth: 2,\n          borderColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          fontSize: 20,\n          color: 'white',\n          alignSelf: 'center',\n          marginTop: 5\n        },\n        onChangeText: function onChangeText(input) {\n          return _this2.updateValue(input, 'username');\n        },\n        placeholder: \"\",\n        value: this.state.username,\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      })), React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          color: 'white',\n          alignSelf: 'center',\n          marginBottom: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, \"password \"), React.createElement(View, {\n        style: {\n          height: 40,\n          backgroundColor: '#2c2c2e',\n          opacity: 0.8,\n          marginBottom: 15,\n          alignSelf: 'center',\n          width: '60%',\n          borderWidth: 2,\n          borderColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          fontSize: 20,\n          color: 'white',\n          alignSelf: 'center',\n          marginTop: 5\n        },\n        onChangeText: function onChangeText(input) {\n          return _this2.updateValue(input, 'password');\n        },\n        placeholder: \"\",\n        value: this.state.password,\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }))), React.createElement(Text, {\n        style: styles.credit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, \"I forgot my password.\"), React.createElement(View, {\n        style: {\n          height: 50,\n          marginBottom: 10,\n          marginTop: 20,\n          alignSelf: 'center',\n          width: '60%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.loginFunction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          color: 'white',\n          alignSelf: 'center',\n          marginTop: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, \"L O G I N\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: '#000',\n    justifyContent: 'flex-start',\n    borderLeftWidth: 5,\n    borderRightWidth: 5\n  },\n  header: {\n    flex: 1,\n    fontSize: 50\n  },\n  title: {\n    marginTop: 18,\n    fontSize: 18,\n    color: '#fff',\n    alignSelf: 'flex-end'\n  },\n  infoText: {\n    fontSize: 15,\n    color: '#fff',\n    alignSelf: 'center'\n  },\n  credit: {\n    fontSize: 15,\n    color: 'gray',\n    marginTop: 5,\n    marginBottom: 10,\n    textDecorationLine: 'underline',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/sarah/Desktop/app projects/loginapp/screens/LoginScreen.js"],"names":["React","AsyncStorage","LoginScreen","loginFunction","state","username","password","props","navigation","navigate","alert","input","field","setState","styles","container","padding","marginTop","fontSize","fontWeight","alignSelf","color","marginBottom","height","backgroundColor","opacity","width","borderWidth","borderColor","updateValue","credit","Component","StyleSheet","create","flex","justifyContent","alignItems","borderLeftWidth","borderRightWidth","header","title","infoText","textDecorationLine"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Dimensions, TextInput, ImageBackground, KeyboardAvoidingView, AsyncStorage, Image } from 'react-native';\r\n\r\nexport default class LoginScreen extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    // ********************************** CHECK IF USER IS LOGGED UP WHEN OPENING APP ***************************************************************\r\n\r\n    componentDidMount() {\r\n        //     const { dispatch, currentURL } = this.props\r\n\r\n        //     if (!isLoggedIn) {\r\n        //       // set the current url/path for future redirection (we use a Redux action)\r\n        //       // then redirect (we use a React Router method)\r\n        //       dispatch(setRedirectUrl(currentURL))\r\n        //       browserHistory.replace(\"/login\")\r\n        //     }\r\n        //   }\r\n\r\n        //   render() {\r\n        //     if (isLoggedIn) {\r\n        //       return this.props.children\r\n        //     } else {\r\n        //       return null\r\n        //     }\r\n        //   }\r\n        // }\r\n\r\n        // // Grab a reference to the current URL. If this is a web app and you are\r\n        // // using React Router, you can use `ownProps` to find the URL. Other\r\n        // // platforms (Native) or routing libraries have similar ways to find\r\n        // // the current position in the app.\r\n        // function mapStateToProps(state, ownProps) {\r\n        //   return {\r\n        //     isLoggedIn: state.loggedIn,\r\n        //     currentURL: ownProps.location.pathname\r\n        //   }\r\n    }\r\n\r\n    // ************************************************************************************************************************************************\r\n\r\n    updateValue(input, field) {\r\n\r\n        if (field == 'username') {\r\n            this.setState({\r\n                username: input,\r\n            })\r\n        }\r\n        else if (field == 'password') {\r\n            this.setState({\r\n                password: input,\r\n            })\r\n        }\r\n    }\r\n\r\n    loginFunction = async () => {\r\n\r\n        if (this.state.username == '1' && this.state.password == '1') {\r\n\r\n            this.props.navigation.navigate('Home', {username: this.state.username, password: this.state.password});  \r\n        }\r\n        else {\r\n            alert('Wrong username and password. Use 1 and 1.')\r\n        }\r\n    }\r\n\r\n    render() {            \r\n\r\n        return (\r\n            \r\n            <View style={styles.container}>\r\n                <View style={{ padding: 1 }}>\r\n                   \r\n                    <View>\r\n                        <TouchableOpacity>\r\n                            <Text style={{ marginTop: 100, fontSize: 50, fontWeight: 'bold', alignSelf: 'center', color: '#fff' }}>WELCOME</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n                {/* <Image source={require('./../assets/iconK.png')} style={{ height: screenHeight / 3, width: screenWidth / 2, alignSelf: 'center', marginTop: 80 }}></Image> */}\r\n                \r\n                <View>\r\n                <Text style={{ marginTop: 10, fontSize: 22, color: 'gray', alignSelf: 'center', fontWeight: 'bold' }}>PLEASE ENTER 1 FOR USERNAME AND 1 FOR PASSWORD TO ENTER</Text>\r\n                </View>\r\n                \r\n                <View style={{ marginTop: 60}}>\r\n                    <Text style={{ fontSize: 22, color: 'white', alignSelf: 'center', marginBottom: 5 }}>username</Text>\r\n                    <View style={{ height: 40, backgroundColor: '#2c2c2e', opacity: 0.8, marginBottom: 10, alignSelf: 'center', width: '60%', borderWidth: 2, borderColor: 'grey' }}>\r\n                        <TextInput\r\n                            style={{ fontSize: 20, color: 'white', alignSelf: 'center', marginTop: 5 }}\r\n                            onChangeText={(input) => this.updateValue(input, 'username')}\r\n                            placeholder=\"\"\r\n                            value={this.state.username}\r\n                            autoCapitalize=\"none\"></TextInput>\r\n                    </View>\r\n                    <Text style={{ fontSize: 22, color: 'white', alignSelf: 'center', marginBottom: 5 }}>password </Text>\r\n                    <View style={{ height: 40, backgroundColor: '#2c2c2e', opacity: 0.8, marginBottom: 15, alignSelf: 'center', width: '60%', borderWidth: 2, borderColor: 'grey' }}>\r\n                        <TextInput style={{ fontSize: 20, color: 'white', alignSelf: 'center', marginTop: 5 }}\r\n                            onChangeText={(input) => this.updateValue(input, 'password')}\r\n                            placeholder=\"\"\r\n                            value={this.state.password}\r\n                            secureTextEntry={true}></TextInput>\r\n                    </View>\r\n                </View>\r\n                <Text style={styles.credit}>I forgot my password.</Text>\r\n\r\n                <View style={{ height: 50, marginBottom: 10, marginTop: 20, alignSelf: 'center', width: '60%' }}>\r\n                    <TouchableOpacity onPress={this.loginFunction}>\r\n                        <Text style={{ fontSize: 25, color: 'white', alignSelf: 'center', marginTop: 2 }}>L O G I N</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'stretch',\r\n        backgroundColor: '#000',\r\n        justifyContent: 'flex-start',\r\n        borderLeftWidth: 5,\r\n        borderRightWidth: 5,\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        fontSize: 50,\r\n    },\r\n    title: {\r\n        marginTop: 18,\r\n        fontSize: 18,\r\n        color: '#fff',\r\n        alignSelf: 'flex-end',\r\n    },\r\n    infoText: {\r\n        fontSize: 15,\r\n        color: '#fff',\r\n        alignSelf: 'center',\r\n    },\r\n    credit: {\r\n        fontSize: 15,\r\n        color: 'gray',\r\n        marginTop: 5,\r\n        marginBottom: 10,\r\n        textDecorationLine: 'underline',\r\n        alignSelf: 'center'\r\n    },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}